package org.dark.dataStructure.tree;

/**
 * @Title		:	平衡二叉樹的實現類
 * 					主要實現的功能包括：對樹平衡性的校驗
 * 										左、右翻轉
 * 										前序、後序、中序三序遍歷
 * 										增刪節點、查找、最值、找到節點的前驅和後繼等操作
 * @Description:	平衡二叉樹是在二叉查找樹的基礎上，加上了自平衡的功能。其他功能與思路與二叉查找樹完全一致。
 * 					每次增加節點後，需要校驗樹或子樹是否失衡（貌似從當前節點的父節點一直到根節點都需要校驗一次--微觀到宏觀）
 * 					如果失衡，則判斷屬於哪種失衡（左左、左右、右左、右右）
 * 					左左與右右的旋轉比較簡單。若是左右，需要先旋轉為左左（右左旋轉為右右）
 * @author liwei
 * @date		:	2019年2月11日
 */
public class AVLTree {

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public static void main(String[] args) {

	}

}
